class Solution {

    public int res ;

    public void collection(int[] nums , int left , int right){

        if(left >= right){
            return;
        }
        int mid = (left + right ) / 2;
        collection(nums , left , mid);
        collection(nums , mid + 1 , right);

        List<Integer> temp = new ArrayList<>();
        int i = left ;
        int j = mid + 1 ;
        while(i <= mid && j <= right){
            if(nums[i] > nums[j]){
                temp.add(nums[j++]);
                res += (mid - i + 1);
            }
            else{
                temp.add(nums[i++]);
            }
        }
        while(i <= mid){
            temp.add(nums[i++]);
        }
        while(j <= right){
            temp.add(nums[j++]);
        }
        for(i = left , j = 0 ; i <= right ; i++ , j++){
            nums[i] = temp.get(j);
        }
        return;

    }

    public int reversePairs(int[] nums) {

        int len = nums.length;
        if(len <= 1){
            return 0;
        }
        res = 0;
        collection(nums , 0 , len - 1);
        return res;

    }
}