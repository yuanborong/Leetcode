class Solution {
    public int maxProfit(int[] prices) {
        
        int len = prices.length;
        if(len <= 0) return 0;

        Stack<Integer> stack = new Stack<>();
        int res = 0;
        int sell = -1, buy = 0;
        for(int i : prices){
            if(stack.isEmpty() == false && stack.peek() > i){
                while(stack.isEmpty() == false){
                    if(sell == -1){
                        sell = stack.peek();
                    } 
                    buy = stack.pop();
                }  
            }
            if(sell != -1){
                res += (sell - buy);
                sell = -1;
            }
            stack.push(i);
        }
        while(stack.isEmpty() == false){
            if(sell == -1){
                sell = stack.peek();
            } 
            buy = stack.pop();
        }
        if(sell != -1){
            res += (sell - buy);
            sell = -1;
        }
        return res;
    }
}