class Solution {
    public int largestRectangleArea(int[] heights) {

        int len = heights.length ;
        if(len <= 0) return 0 ;

        int[] newHeights = new int[len+2] ;
        for(int i = 1 ; i <= len ; i++){
            newHeights[i] = heights[i-1] ;
        }
        int res = 0 ;
        // 维护一个单调递增栈
        Stack<Integer> stack = new Stack<>() ;
        for(int i = 0 ; i < len+2 ; i++){
            while(stack.isEmpty() == false && newHeights[i] < newHeights[stack.peek()]){
                int needCalculatedHeightIndex = stack.pop() ;
                int leftBoundIndex = stack.peek() ;
                int temp = (i - leftBoundIndex - 1) * newHeights[needCalculatedHeightIndex] ;
                if(res < temp) res = temp ;
            }
            stack.push(i) ;
        }
        return res ;
    }
}