class Solution {

    public boolean[][] flag;
    public char[][] temp_grid;
    public int height ; 
    public int width ;
    public int res;

    public void dfs(int i , int j){
        if(i < 0 || i >= height || j < 0 || j >= width || temp_grid[i][j] == '0' || flag[i][j] == true){
            return;
        }
        flag[i][j] = true;
        dfs(i + 1 , j);
        dfs(i - 1 , j);
        dfs(i , j - 1);
        dfs(i , j + 1);
        return;

    }

    public int numIslands(char[][] grid) {

        height = grid.length;
        if(height == 0){
            return 0;
        }
        width = grid[0].length;
        if(width == 0){
            return 0;
        }

        res = 0;
        temp_grid = grid;
        flag = new boolean[height][width];

        for(int i = 0 ; i < height ; i++){
            for(int j = 0 ; j < width ; j++){
                if(grid[i][j] == '1' && flag[i][j] == false){
                    res++;
                    dfs(i , j);
                }
            }
        }
        return res;

    }
}