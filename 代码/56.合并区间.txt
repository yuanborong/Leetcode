class Solution {
    public int[][] merge(int[][] intervals) {

        List<int[]> res = new ArrayList<>();
        int len = intervals.length;
        if(len <= 0){
            return res.toArray(new int[0][]);
        }
        int start , end;
        Arrays.sort(intervals , new Comparator<int[]>() {
            @Override
            public int compare(int[] o1 , int[] o2) {
                return o1[0] - o2[0];
            }
        });
        res.add(intervals[0]);
        for(int i = 1 ; i < len ; i++){
            if(intervals[i][0] <= res.get(res.size()-1)[1]){
                start = res.get(res.size() - 1)[0];
                end = intervals[i][1]>res.get(res.size()-1)[1]?intervals[i][1]:res.get(res.size()-1)[1];
                res.remove(res.size()-1);
                res.add(new int[]{start , end});
            }
            else{
                res.add(intervals[i]);
            }
        }
        return res.toArray(new int[0][]);
    }
}