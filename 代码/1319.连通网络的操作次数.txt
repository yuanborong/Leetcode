class Solution {

    public int[] parents ;

    public int makeConnected(int n, int[][] connections) {

        int len = connections.length;
        if(len < n - 1) return -1;

        parents = new int[n];
        for(int i = 0 ; i < n ; i++) parents[i] = i;

        for(int i = 0 ; i < len ; i++){
            union(connections[i][0] , connections[i][1]);
        }
        int res = 0;
        for(int i = 0 ; i < n ; i++){
            if(parents[i] == i) res++;
        }

        return res - 1 ;

    }

    public int find(int x ){
        return (x == parents[x]) ? x : find(parents[x]);
    }

    public void union(int x , int y){
        int parentX = find(x);
        int parentY = find(y);
        if(parentX != parentY){
            parents[parentX] = parentY;
        }
        return ;
    }

}