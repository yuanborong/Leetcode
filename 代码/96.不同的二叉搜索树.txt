class Solution {

    public int[] count ;

    public int dfs(int n){

        if(n <= 1) return 1 ;
        int leftCount , rightCount , res = 0 ;
        for(int i = 1 ; i <= n ; i++){
            leftCount = (count[i-1] == -1) ? dfs(i-1) : count[i-1] ;
            count[i-1] = (count[i-1] == -1) ? leftCount : count[i-1] ;
            rightCount = (count[n-i] == -1) ? dfs(n-i) : count[n-i] ;
            count[n-i] = (count[n-i] == -1) ? rightCount : count[n-i] ;
            res += (leftCount * rightCount) ;
        }
        return res;

    }

    public int numTrees(int n) {

        count = new int[n+1] ;
        for(int i = 2 ; i <= n ; i++) count[i] = -1 ;
        count[0] = 1 ;
        count[1] = 1 ;
        return dfs(n) ;

    }
}