/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {

    private List<String> res;
    private List<Integer> temp_list;
    private StringBuilder sb;

    public void addNewRoute(){
        sb = new StringBuilder();
        for(int i = 0 ; i < temp_list.size() ; i++){
            sb.append(temp_list.get(i));
            if(i != temp_list.size() - 1){
                sb.append("->");
            }
        }
        res.add(sb.toString());
        return;
    }

    public void traceback(TreeNode root){

        temp_list.add(root.val);
        if(root.left == null && root.right == null){
            addNewRoute();
        }
        if(root.left != null){
            traceback(root.left);
        }
        if(root.right != null){
            traceback(root.right);
        }
        temp_list.remove(temp_list.size()-1);
        return ;

    }

    public List<String> binaryTreePaths(TreeNode root) {

        res = new ArrayList<>();
        temp_list = new ArrayList<>();
        if(root == null){
            return res ;
        }
        traceback(root);
        return res;

    }
}