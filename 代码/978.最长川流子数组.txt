class Solution {
    public int maxTurbulenceSize(int[] A) {

        int len = A.length;
        if(len <= 0) return 0;
        if(len == 1) return 1;
        int[] diff = new int[len-1];

        for(int i = 1 ; i < len ; i++){
            if(A[i] - A[i-1] < 0) diff[i-1] = -1;
            else if(A[i] - A[i-1] > 0) diff[i-1] = 1;
            else if(A[i] - A[i-1] == 0) diff[i-1] = 0;
        }
        int res = 0;
        int left = 0 ;
        int right = 0 ;
        while(right < len-1){
            if(diff[right] == 0){
                if(res < (right - left)) res = (right - left);
                left = right + 1;
                right += 1;
                continue;
            }
            if(right == left){
                right++;
                if(res < (right - left)) res = (right - left);
                continue;
            }
            if(diff[right] * diff[right-1] == -1){
                right++;
            }
            else{
                if(res < (right - left)) res = (right - left);
                left = right;
            }
        }
        if(res < (right - left)) res = (right - left);
        return res+1;
    }
}