class Solution {
    public boolean search(int[] nums, int target) {

        int len = nums.length ;
        if(len <= 0) return false ;

        int minIndex = -1 ;
        int left = 0 , right = len - 1 ;
        int mid ;
        while(left < right){
            while(left < right - 1 && nums[left] == nums[left+1]) left++ ;
            while(left < right - 1 && nums[right] == nums[right-1]) right-- ;
            mid = (left + right) / 2 ;
            if(nums[mid] > nums[mid + 1]){
                minIndex = mid ;
                break ;
            }
            if(nums[mid] > nums[len - 1]){
                left = mid ;
            }
            else{
                right = mid ;
            }
        }
        if(minIndex == -1){
            left = 0 ; 
            right = len - 1 ;
        }
        else if(nums[len-1] >= target ){
            left = minIndex + 1 ;
            right = len - 1 ;
        }
        else{
            left = 0 ;
            right = minIndex ;
        }

        while(left <= right) {
            mid = (left + right) / 2 ;
            if(nums[mid] == target){
                return true ;
            }
            if(nums[mid] < target){
                left = mid + 1 ;
            }
            else{
                right = mid - 1;
            }
        }

        return false ;

    }
}