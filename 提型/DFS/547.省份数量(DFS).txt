class Solution {

    public int res ;

    public int findCircleNum(int[][] isConnected) {

        int len = isConnected.length;
        if(len <= 0) return 0;
        res = 0;
        boolean[] visited = new boolean[len];
        for(int i = 0 ; i < len ; i++){
            if(visited[i] == false){
                visited[i] = true;
                res++;
                dfs(isConnected , len , visited , i);
            }
        }
        return res;
    }

    public void dfs(int[][] isConnected , int len , boolean[] visited , int index){
        if(index >= len || index < 0) return;
        for(int j = 0; j < len ; j++){
            if(visited[j] == false && isConnected[index][j] == 1){
                visited[j] = true;
                dfs(isConnected , len , visited , j);
            }
        }
        return ;
    }

}