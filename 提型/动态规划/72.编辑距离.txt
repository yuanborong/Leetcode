class Solution {
    public int minDistance(String word1, String word2) {

        int len_word1 = word1.length();
        int len_word2 = word2.length();

        if(len_word1 == 0){
            return len_word2;
        }
        if(len_word2 == 0){
            return len_word1;
        }

        int[][] dp = new int[len_word2+1][len_word1+1];
        int min;
        for(int i = 0 ; i <= len_word1 ; i++){
            dp[0][i] = i;
        }
        for(int i = 0 ; i <= len_word2 ; i++){
            dp[i][0] = i;
        }

        for(int i = 1 ; i <= len_word2 ; i++){
            for(int j = 1 ; j <= len_word1 ; j++){
                if(word1.charAt(j-1) == word2.charAt(i-1)){
                    dp[i][j] = dp[i-1][j-1];
                }
                else{
                    min = (dp[i][j-1] > dp[i-1][j] ? dp[i-1][j] : dp[i][j-1]);
                    min = min > dp[i-1][j-1] ? dp[i-1][j-1] : min;
                    dp[i][j] = min + 1;
                }
            }
        }
        return dp[len_word2][len_word1];
    }
}