class Solution {
    public int maximalSquare(char[][] matrix) {

        int height = matrix.length;
        if(height == 0){
            return 0;
        }
        int width = matrix[0].length;
        if(width == 0){
            return 0;
        }
        
        int res = 0;
        int[][] dp = new int[height][width];

        for(int i = 0 ; i < height ; i++){
            dp[i][0] = (matrix[i][0] == '1')?1:0;
            if(res == 0 && dp[i][0] == 1){
                res = 1;
            }
        }
        for(int j = 0 ; j < width ; j++){
            dp[0][j] = (matrix[0][j] == '1')?1:0;
            if(res == 0 && dp[0][j] == 1){
                res = 1;
            }
        }

        for(int i = 1 ; i < height ; i++){
            for(int j = 1 ; j < width ; j++){
                if(matrix[i][j] == '0'){
                    dp[i][j] = 0;
                }
                else{
                    dp[i][j] = (Math.min(dp[i][j-1] , Math.min(dp[i-1][j] , dp[i-1][j-1]))) + 1;
                }
                if(dp[i][j] * dp[i][j] > res){
                    res = dp[i][j] * dp[i][j];
                }
            }
        }
        return res;
    }
}