// 题解：https://leetcode-cn.com/problems/out-of-boundary-paths/solution/zhuang-tai-ji-du-shi-zhuang-tai-ji-by-christmas_wa/

class Solution {
    public int findPaths(int m, int n, int N, int i, int j) {

        long[][][] dp = new long[m+2][n+2][N+1];
        for(int i_temp = 0 ; i_temp <= n + 1 ; i_temp++){
            dp[0][i_temp][0] = 1;
            dp[m+1][i_temp][0] = 1;
        }
        for(int i_temp = 0 ; i_temp <= m + 1 ; i_temp++){
            dp[i_temp][0][0] = 1;
            dp[i_temp][n+1][0] = 1;
        }
        long res = 0;
        for(int k = 1 ; k <= N ; k++){
            for(int i_temp = 1 ; i_temp <= m ; i_temp++){
                for(int j_temp = 1 ; j_temp <= n ; j_temp++){
                    dp[i_temp][j_temp][k] = (dp[i_temp][j_temp-1][k-1] + dp[i_temp-1][j_temp][k-1] + dp[i_temp+1][j_temp][k-1] + dp[i_temp][j_temp+1][k-1] ) % 1000000007 ;
                    if(i_temp == i + 1 && j_temp == j + 1){
                        res += dp[i_temp][j_temp][k];
                    }
                }
            }
        }
        return (int)(res % 1000000007);

    }
}