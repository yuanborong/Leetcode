class Solution {
public:
    int coinChange(vector<int>& coins, int amount) {

        int len = coins.size();
        if(len == 0 || amount < 0){
            return -1;
        }
        if(amount == 0){
            return 0;
        }

        int dp[len][amount+1];
        sort(coins.begin() , coins.end());

        for(int i = 1 ; i <= amount ; i++){
            if((i % coins[0]) == 0){
                dp[0][i] = (i / coins[0]);
            }
            else{
                dp[0][i] = INT_MAX;
            }
        }

        for(int i = 1 ; i < len ; i++){
            for(int j = 1 ; j <= amount ; j++){
                if(coins[i] == j){
                    dp[i][j] = 1;
                }
                else if(coins[i] > j){
                    dp[i][j] = dp[i-1][j];
                }
                //coins[i] < j
                else{
                    if(j-coins[i]<0 || dp[i][j-coins[i]] == INT_MAX){
                        dp[i][j] = dp[i-1][j];
                    }
                    else if(dp[i][j-coins[i]]+1 < dp[i-1][j]){
                        dp[i][j] = dp[i][j-coins[i]] + 1;
                    }
                    else{
                        dp[i][j] = dp[i-1][j];
                    }
                }
            }
        }
        // for(int i = 0 ; i < len ; i++){
        //     for(int j = 1 ; j <= amount ; j++){
        //         cout << dp[i][j] << " " ;
        //     }
        //     cout << endl;
        // }
        return (dp[len-1][amount] == INT_MAX)?-1:dp[len-1][amount];

    }
};