/**
 * // This is MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * interface MountainArray {
 *     public int get(int index) {}
 *     public int length() {}
 * }
 */
 
class Solution {
    public int findInMountainArray(int target, MountainArray mountainArr) {
        
        int len = mountainArr.length();

        int left = 0 ;
        int right = len - 1;
        int mid ;
        int temp , temp1 , temp2;
        int peek_index = 0;
        int res = -1;


        while(left < right){
            mid = (left + right) / 2;
            temp = mountainArr.get(mid);
            temp1 = mountainArr.get(mid-1);
            temp2 = mountainArr.get(mid+1);
            if(temp > temp1 && temp > temp2){
                peek_index = mid;
                break;
            }
            if(temp > temp1){
                left = mid;
            }
            else if(temp > temp2){
                right = mid;
            }
        }

        //урвС╠ъ
        left = 0 ;
        right = peek_index;
        while(left <= right){
            mid = (left + right) / 2;
            temp = mountainArr.get(mid);
            if(temp == target ){
                res = mid;
                return res;
            }
            else if(temp < target){
                left = mid + 1;
            }
            else{
                right = mid - 1;
            }
        }

        //урср╠ъ
        left = peek_index;
        right = len - 1;
        while(left <= right){
            mid = (left + right) / 2;
            temp = mountainArr.get(mid);
            if(temp == target){
                res = mid;
                return res;
            }
            else if(temp < target){
                right = mid - 1;
            }
            else{
                left = mid + 1;
            }
        }
        return res;
    }
}