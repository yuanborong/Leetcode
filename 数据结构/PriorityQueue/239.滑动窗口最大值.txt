class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {

        Queue<Integer> heap = new PriorityQueue<Integer>(new Comparator<Integer>(){
            @Override
            public int compare(Integer o1 , Integer o2){
                return o2 - o1;
            }
        });

        int[] res = new int[nums.length - k + 1];

        for(int i = 0 ; i < nums.length ; i++){
            if(heap.size() >= k){
                heap.remove((Object)nums[i-k]);
            }
            heap.add(nums[i]);
            if(i >= k - 1){
                res[i-k+1] = heap.peek();
            }
        }
        return res;
    }
}